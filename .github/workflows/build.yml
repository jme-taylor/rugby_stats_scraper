name: linting_formatting_testing

on: [push]

jobs:
  run_:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Set up python 3.9
        uses: actions/setup-python@v1
        with:
          python-version: 3.9

      - name: Install poetry
        uses: snok/install-poetry@v1

      - name: Cache poetry virtualenv
        uses: actions/cache@v1
        id: cache
        with:
          path: ~/.virtualenvs
          key: poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            poetry-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: poetry install
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Create env file
        run: |
          touch .env
          echo AWS_ACCESS_ID=${{ secrets.AWS_ACCESS_ID }} >> .env
          echo AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} >> .env
          echo AWS_DEFAULT_REGION=${{ secrets.AWS_DEFAULT_REGION }} >> .env
          cat .env

      - name: Run linter
        run: poetry run flake8 .

      - name: Run formatter
        run: poetry run black . --check --line-length 79

      - name: Run tests
        run: poetry run pytest

      - name: Run isort
        run: poetry run isort . --check

      - name: Run mypy
        run: poetry run mypy . --ignore-missing-imports --explicit-package-bases
